#include <Servo.h>

// Pins for Ultrasonic Sensor
const int trigPin = 9;
const int echoPin = 10;

// Pins for Servo
Servo servo;
const int servoPin = 11;

// Pins for Relays (4 motors)
const int leftMotorForward = 2;
const int leftMotorReverse = 3;
const int rightMotorForward = 4;
const int rightMotorReverse = 5;

// Variables
long distance;
int obstacleDistance = 45; // Obstacle threshold: 45 cm

void setup() {
  Serial.begin(9600);
  
  // Ultrasonic Sensor
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  
  // Servo
  servo.attach(servoPin);
  servo.write(90); // Start facing forward
  
  // Relay Pins
  pinMode(leftMotorForward, OUTPUT);
  pinMode(leftMotorReverse, OUTPUT);
  pinMode(rightMotorForward, OUTPUT);
  pinMode(rightMotorReverse, OUTPUT);
}

// Measure distance using ultrasonic sensor
long getDistance() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  long duration = pulseIn(echoPin, HIGH);
  return (duration * 0.034) / 2; // Convert to cm
}

// Robot Movements
void moveForward() {
  digitalWrite(leftMotorForward, HIGH);
  digitalWrite(leftMotorReverse, LOW);
  digitalWrite(rightMotorForward, HIGH);
  digitalWrite(rightMotorReverse, LOW);
}

void moveBackward() {
  digitalWrite(leftMotorForward, LOW);
  digitalWrite(leftMotorReverse, HIGH);
  digitalWrite(rightMotorForward, LOW);
  digitalWrite(rightMotorReverse, HIGH);
}

void turnLeft() {
  digitalWrite(leftMotorForward, LOW);
  digitalWrite(leftMotorReverse, HIGH);
  digitalWrite(rightMotorForward, HIGH);
  digitalWrite(rightMotorReverse, LOW);
  delay(500); // Adjust turn duration
}

void turnRight() {
  digitalWrite(leftMotorForward, HIGH);
  digitalWrite(leftMotorReverse, LOW);
  digitalWrite(rightMotorForward, LOW);
  digitalWrite(rightMotorReverse, HIGH);
  delay(500);
}

void stopMotors() {
  digitalWrite(leftMotorForward, LOW);
  digitalWrite(leftMotorReverse, LOW);
  digitalWrite(rightMotorForward, LOW);
  digitalWrite(rightMotorReverse, LOW);
}

void loop() {
  distance = getDistance();
  Serial.print("Forward Distance: ");
  Serial.println(distance);

  if (distance <= obstacleDistance) {
    stopMotors();
    delay(500);
    
    // Scan left and right
    servo.write(180); // Look left
    delay(500);
    long leftDistance = getDistance();
    Serial.print("Left Distance: ");
    Serial.println(leftDistance);
    
    servo.write(0); // Look right
    delay(500);
    long rightDistance = getDistance();
    Serial.print("Right Distance: ");
    Serial.println(rightDistance);
    
    servo.write(90); // Return to center
    delay(500);
    
    // Decide direction
    if (leftDistance > rightDistance && leftDistance > obstacleDistance) {
      Serial.println("Turning LEFT");
      turnLeft();
    } else if (rightDistance > obstacleDistance) {
      Serial.println("Turning RIGHT");
      turnRight();
    } else {
      Serial.println("Moving BACKWARD");
      moveBackward();
      delay(1000);
      stopMotors();
    }
    stopMotors();
    delay(500);
    moveForward();
  } else {
    moveForward();
  }
}
